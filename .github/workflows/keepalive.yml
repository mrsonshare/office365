name: KeepAlive (Windows)

on:
  schedule:
    - cron: '0 2 * * *'   # chạy hàng ngày 02:00 UTC
  workflow_dispatch: {}

jobs:
  keepalive-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests python-dotenv feedparser flask

      - name: Install rclone (chocolatey)
        run: choco install rclone -y

      - name: Write rclone.conf (optional)
        env:
          RCLONE_CONF: ${{ secrets.RCLONE_CONF }}
        shell: pwsh
        run: |
          if (-not $Env:RCLONE_CONF) {
            Write-Host "No RCLONE_CONF secret set. Skipping..."
            exit 0
          }
          $rcloneDir = Join-Path $env:APPDATA "rclone"
          New-Item -ItemType Directory -Path $rcloneDir -Force | Out-Null
          $confPath = Join-Path $rcloneDir "rclone.conf"
          $Env:RCLONE_CONF | Out-File -FilePath $confPath -Encoding utf8
          Write-Host "Wrote rclone.conf to $confPath"

      - name: Run KeepAlive Script
        env:
          TENANT_ID: ${{ secrets.TENANT_ID }}
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_SECRET: ${{ secrets.CLIENT_SECRET }}
          ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          USER_EMAIL: ${{ secrets.USER_EMAIL }}
          REDIRECT_URI: ${{ secrets.REDIRECT_URI }}
          IMAGE_FOLDER: ${{ secrets.IMAGE_FOLDER }}
          RCLONE_REMOTE: ${{ secrets.RCLONE_REMOTE }}
          RCLONE_CLEAN_FOLDER: ${{ secrets.RCLONE_CLEAN_FOLDER }}
          LOCAL_UPLOAD: ${{ secrets.LOCAL_UPLOAD }}
          REMOTE_UPLOAD: ${{ secrets.REMOTE_UPLOAD }}
          EXTERNAL_EMAILS: ${{ secrets.EXTERNAL_EMAILS }}
        run: |
          python KeepAlive_Combined.py --app --skip-rclone
